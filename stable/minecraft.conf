# from https://github.com/elasticsearch/logstash/blob/v1.4.2/patterns/grok-patterns
#input {
#  file {
#    type => "minecraft"
#    path => [ "/opt/minecraft/logs/latest.log" ]
#    sincedb_path => "/dev/null"
#    start_position => "beginning"
#  }
#}
filter {
  if [type] == "minecraft" {
    grok {
      match => [ "message", "\[%{TIME:timestamp}\]%{SPACE}\[(?<thread>[^/]*)\/%{LOGLEVEL:log_level}\]:%{SPACE}%{GREEDYDATA:message}" ]
      overwrite => [ "message" ]
      break_on_match => false
      add_tag => ["unprocessed"]
    }

    date {
      match => [ "timestamp" , "HH:mm:ss" ]
      remove_field => [ "timestamp" ]
    }

    # UUID of player GavIAm is 3a6746ad-0c3b-4598-a352-52912ab27723",
    grok {
      match => [ "message",  "^UUID of player %{WORD:player} is %{UUID:uuid}" ]
      add_tag => [ "player", "uuid" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    # "message" => "GavIAm[/172.16.10.56:51148] logged in with entity id 14490 at (228.5, 71.0, 220.5)",
    grok {
      match => [ "message",  "^%{WORD:player}\[\/%{IP:clientip}:%{POSINT:port}\] logged in with entity id %{POSINT} at \(%{BASE10NUM}, %{BASE10NUM}, %{BASE10NUM}\)" ]
      add_tag => [ "player", "login" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    if "player" in [tags] and "login" in [tags] {
      geoip { source => "clientip" }
      dns { reverse => [ "clientip" ] }
    }

    # "message" => "GavIAm joined the game",
    grok {
      match => [ "message",  "^%{WORD:player} joined the game$" ]
      add_tag => [ "player", "join" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    # "message" => "GavIAm has just earned the achievement [Getting Wood]",
    grok {
      match => [ "message",  "^%{WORD:player} has just earned the achievement \[(?<achievement>[^\[]+)\]$" ]
      add_tag => [ "player", "achievement" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    # "message" => "GavIAm lost connection: TextComponent{text='Disconnected', siblings=[], style=Style{hasParent=false, color=null, bold=null, italic=null, underlined=null, obfuscated=null, clickEvent=null, hoverEvent=null, insertion=null}}",
    grok {
      match => [ "message", "^%{WORD:player} left the game$" ]
      add_tag => [ "player", "part" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    # "message" => "<GavIAm> hi",
    grok {
      match => [ "message", "^<(?<player>[a-zA-Z0-9_]+)> .*$" ]
      add_tag => [ "player", "chat" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    # "message" => "GavIAm was slain by Spider",
    grok {
      match => [ "message", "^%{WORD:player} was slain by %{GREEDYDATA:slayer}$" ]
      add_tag => [ "player", "killed" ]
      remove_tag => ["unprocessed"]
      tag_on_failure => []
    }

    # "message" => "GavIAm lost connection: TextComponent{text='Disconnected', siblings=[], style=Style{hasParent=false, color=null, bold=null, italic=null, underlined=null, obfuscated=null, clickEvent=null, hoverEvent=null, insertion=null}}",
  }
}
